/**
  ****************************(C) COPYRIGHT 2019 DJI****************************
  * @file       chassis.h
  * @brief     	底盘控制任务
	*
	*     000000000000000     00               00    00     00   00         00 
	*           00     0      00                00    00   00     00       00  
	*       00  00000        00000000000000      00  000000000   00000000000000
	*       00  00          00           00    00    000000000     00     00   
	*      00000000000     00  000000    00     000     00           000000    
	*     00    00   0000     00    00   00      00   000000           00      
	*       00000000000       00    00   00           000000           00      
	*       0   00    0       0000000 00 00       00    00       00000000000000
	*       00000000000       00       000       00 00000000000        00      
	*           00            00                000 00000000000        00      
	*           00  00        00          0    000      00             00      
	*      000000000000        00        000  000       00          00 00      
	*       00        00        000000000000            00            00       
	********************************************************************************/
	
#ifndef CHASSIS_TASK_H
#define CHASSIS_TASK_H

#include "struct_typedef.h"
#include "CAN_receive.h"
#include "gimbal_task.h"
#include "pid.h"
#include "remote_control.h"
#include "user_lib.h"
#include "INS_task.h"

#define CHASSIS_TASK_INIT_TIME 357	//任务开始空闲一段时间

#define CHASSIS_X_CHANNEL			1		//前后的遥控器通道号码
#define CHASSIS_Y_CHANNEL			0		//左右的遥控器通道号码
#define CHASSIS_WZ_CHANNEL		2		//在特殊模式下，可以通过遥控器控制旋转
#define CHASSIS_MODE_CHANNEL 	0		//选择底盘状态 开关通道号

//遥控器前进摇杆（max 660）转化成车体前进速度（m/s）的比例
#define CHASSIS_VX_RC_SEN 0.006f

//遥控器左右摇杆（max 660）转化成车体左右速度（m/s）的比例
#define CHASSIS_VY_RC_SEN 0.005f

//跟随底盘yaw模式下，遥控器的yaw遥杆（max 660）增加到车体角度的比例
#define CHASSIS_ANGLE_Z_RC_SEN 0.000002f

//不跟随云台的时候 遥控器的yaw遥杆（max 660）转化成车体旋转速度的比例
#define CHASSIS_WZ_RC_SEN 0.01f

#define CHASSIS_ACCEL_X_NUM 0.1666666667f
#define CHASSIS_ACCEL_Y_NUM 0.3333333333f

//摇杆死区
#define CHASSIS_RC_DEADLINE 25

#define CHASSIS_CONTROL_TIME_MS 		2				//底盘任务控制间隔 2ms
#define CHASSIS_CONTROL_TIME				0.002f	//底盘任务控制间隔 0.002s
#define CHASSIS_CONTROL_FREQUENCE		500.0f	//底盘任务控制频率

//底盘前后左右控制按键
#define CHASSIS_FRONT_KEY		KEY_PRESSED_OFFSET_W
#define CHASSIS_BACK_KEY 		KEY_PRESSED_OFFSET_S
#define CHASSIS_LEFT_KEY 		KEY_PRESSED_OFFSET_A
#define CHASSIS_RIGHT_KEY		KEY_PRESSED_OFFSET_D

#define MAX_WHEEL_SPEED							3.0f	//单个底盘电机最大速度
#define NORMAL_MAX_CHASSIS_SPEED_X	2.5f	//底盘运动过程最大前进速度
#define NORMAL_MAX_CHASSIS_SPEED_Y	2.5f	//底盘运动过程最大平移速度

/* 底盘6020和3508最大can发送电流值 */
#define MAX_6020_CAN_CURRENT 16000.0f
#define MAX_3508_CAN_CURRENT 16000.0f

/* 舵轮解算用到的数据 */
#define M3508_RR						19.20320855f				//M3508电机减速比(M3508 Reduction Ratio)：3591 / 187
#define GM6020_Angle_Ratio	1303.63813886f			//把计算出的弧度Radian转换为GM6020电机角度Angle的系数：8191 / (2 * PI)
#define Wheel_Radius				0.0567f							//车轮的半径，单位：米
#define Wheel_Perimeter			0.35625661f					//车轮周长：2.0f * PI * Wheel_Radius，单位：米
#define MPS_to_RPM					3234.16461897f			//把M3508线速度m/s -> 转速r/min：60.0f * M3508_RR / Wheel_Perimeter
#define RPM_to_Icmd					1.55125592f					//把M3508电机的转速RPM -> 控制电流Icmd(适用于开环)：(187 /3591) * (16384 / 550)

/* 底盘3508电机PID */	/***************待定***************/
#define M3505_MOTOR_SPEED_PID_KP 				15000.0f
#define M3505_MOTOR_SPEED_PID_KI 				10.0f
#define M3505_MOTOR_SPEED_PID_KD				0.0f
#define M3505_MOTOR_SPEED_PID_MAX_OUT 	16000.0f
#define M3505_MOTOR_SPEED_PID_MAX_IOUT	2000.0f

/* 底盘6020电机PID */	/***************待定***************/
#define GM6020_MOTOR_ANGLE_PID_KP 				15000.0f
#define GM6020_MOTOR_ANGLE_PID_KI 				10.0f
#define GM6020_MOTOR_ANGLE_PID_KD					0.0f
#define GM6020_MOTOR_ANGLE_PID_MAX_OUT 		16000.0f
#define GM6020_MOTOR_ANGLE_PID_MAX_IOUT		2000.0f

/* 底盘旋转跟随PID */	/***************待定***************/
#define CHASSIS_FOLLOW_GIMBAL_PID_KP		10.0f
#define CHASSIS_FOLLOW_GIMBAL_PID_KI		0.0f
#define CHASSIS_FOLLOW_GIMBAL_PID_KD		0.1f
#define CHASSIS_FOLLOW_GIMBAL_PID_MAX_OUT		6.0f
#define CHASSIS_FOLLOW_GIMBAL_PID_MAX_IOUT	0.2f

//底盘旋转时的roll轴速度
#define CHASSIS_SPIN_SPEED 		SPIN_SPEED
#define CHASSIS_SPIN_FACTOR 	SPIN_FACTOR

//底盘旋转速度缩放比例
#define CHASSIS_WZ_SET_SCALE 0.1f

#ifndef myabs
	#define myabs(x) (((x) >= 0) ? (x) : (-(x)))
#endif

typedef enum
{
  CHASSIS_VECTOR_FOLLOW_GIMBAL_YAW,   //底盘会跟随云台相对角度
  CHASSIS_VECTOR_NO_FOLLOW_YAW,       //底盘有旋转速度控制
  CHASSIS_VECTOR_RAW,                 //控制电流值直接发送到CAN总线上

} chassis_mode_e;

typedef struct
{
  const MOTOR_MEASURE_t *chassis_motor_measure;
  fp32 accel;
  fp32 speed;
  fp32 speed_set;
	fp32 angle;
	fp32 angle_set;
  int16_t give_current;
	
} chassis_motor_t;

typedef struct
{
	const RC_ctrl_t *chassis_RC;              	//底盘使用的遥控器指针
	const gimbal_motor_t *chassis_yaw_motor;  	//底盘使用到yaw云台电机的相对角度来计算底盘的欧拉角.
	const gimbal_motor_t *chassis_pitch_motor;	//底盘使用到pitch云台电机的相对角度来计算底盘的欧拉角
	const fp32 *chassis_INS_angle;            	//取陀螺仪解算出的欧拉角指针
	chassis_mode_e chassis_mode;              	//底盘控制状态机
	chassis_mode_e last_chassis_mode;         	//底盘上次控制状态机
	chassis_motor_t chassis_3508[4];						//底盘3508电机数据
	chassis_motor_t chassis_6020[4];						//底盘6020电机数据
	pid_type_def chas_3508_pid[4];         			//底盘3508电机速度pid
	pid_type_def chas_6020_pid[4];         			//底盘6020电机角度pid
	pid_type_def chassis_angle_pid;           	//底盘跟随角度pid
	
	first_order_filter_type_t chassis_cmd_slow_set_vx;  	//使用一阶低通滤波减缓设定值
	first_order_filter_type_t chassis_cmd_slow_set_vy;  	//使用一阶低通滤波减缓设定值
//	first_order_filter_type_t chassis_cmd_slow_set_vz; 	//使用一阶低通滤波减缓设定值
	
	fp32 vx;                          //底盘速度 前进方向 前为正，单位 m/s
	fp32 vy;                          //底盘速度 左右方向 左为正  单位 m/s
	fp32 wz;                          //底盘旋转角速度，逆时针为正 单位 rad/s
	fp32 vx_set;											//底盘设定速度 前进方向 前为正，单位 m/s
	fp32 vy_set;											//底盘设定速度 左右方向 左为正，单位 m/s
	fp32 wz_set;											//底盘设定旋转角速度，逆时针为正 单位 rad/s
	fp32 chassis_relative_angle;			//底盘与云台的相对角度，单位 rad
	fp32 chassis_relative_angle_set;	//底盘相对云台控制角度设置
	fp32 chassis_yaw_set;							//底盘偏航角设置
	
	fp32 vx_max_speed;  //前进方向最大速度 单位m/s
	fp32 vx_min_speed;  //后退方向最大速度 单位m/s
	fp32 vy_max_speed;  //左方向最大速度 单位m/s
	fp32 vy_min_speed;  //右方向最大速度 单位m/s
	fp32 chassis_yaw;   //陀螺仪和云台电机叠加的yaw角度
	fp32 chassis_pitch; //陀螺仪和云台电机叠加的pitch角度
	fp32 chassis_roll;  //陀螺仪和云台电机叠加的roll角度
	
} chassis_move_t;


extern void chassis_task(void const *pvParameters);
extern void chassis_rc_to_control_vector(fp32 *vx_set, fp32 *vy_set, chassis_move_t *chassis_move_rc_to_vector);

//底盘运动数据
extern chassis_move_t chassis_move;
extern fp32 yaw_set;


#endif
